{#page for administrator panel#}
{% extends 'base.html.twig' %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset("css/style.css") }}">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>

{% endblock %}


{% block body %}


    {% if   app.user.usercode  == usercode %}
       <h1> Notes de l'élèves : {{ nom }} {{ prenom }}</h1>

<table id="averagegrade">
        <tr>
            <th class="avg">Matières</th>
            <th class="avg">Moyennes</th>
        </tr>

       {% for key, grade in gradus %}

           <tr>
               <td ><a class="skill" href="{{ path("total_grades",{"lastname":nom ,'firstname':prenom,'selectskill': grade.skill}) }}" >{{ grade.skill }}</a></td>
              <td>{{ grade[1] | round(1,'floor')}}</td>
           </tr>


       {% endfor %}

 </table>



    <div id="pppp"><canvas id="myChart" ></canvas></div>



        {{ form(formCom) }}
    <div id="comment-main-box">

        <div id="comment-title" >Correspondance Professeur/Parent</div>

        {% for comment in comments  %}
            {% if app.user.id == comment.receiver.id or app.user.id == comment.sender.id or comment.sender.idrank == 2 and comment.receiver.id == app.user.id%}
            <h5>posté le {{ comment.date }} par {% if app.user.id == comment.sender.id %} les parents de{% elseif comment.sender.idrank == 2  %} Le directeur  {% else %} le professeur {% endif %}    {{ comment.sender.lastname }} {{ comment.sender.firstname }}</h5>
            <span class="commentaire">{{ comment.comment }}</span>

            {% endif %}
        {% endfor %}


    </div>
        <script  src="https://unpkg.com/axios/dist/axios.min.js"></script>


    <script type="text/javascript">
        function onclickdivskill(event){
            event.preventDefault();

            axios.get('/user/totalgrades/'+this.innerHTML+'/{{ nom }}/{{ prenom }}')
                .then(function (response) {
                    // handle success

                    console.log(response);

                    var skills = [];
                    var grades = [];


                    skills = response.data.skills;
                    grades = response.data.grades;



                    var ctx = document.getElementById('myChart').getContext('2d');

                    var myLineChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: skills,
                            datasets: [{
                                data: grades,
                                label: skills[0],
                                borderColor: "#3e95cd",
                                fill: false,

                            }]
                        },
                        options: {
                            scales: {
                                yAxes: [{
                                    ticks: {
                                        beginAtZero:true,
                                        max: 20
                                    }
                                }],
                                xAxes: [{
                                    display: false



                                }]
                            }
                        }


                    });

                })
                .catch(function (error) {
                    // handle error
                    console.log(error);
                });
        }

        document.querySelectorAll('a.skill').forEach(function (a) {




            a.addEventListener("click",onclickdivskill)


        });



        var skills = [];
        var grades = [];
        var elt = {{ objgrade |  raw  }}
        console.log(elt);




        for(let i =0;i<elt.length;i++){

         var skill = elt[i].skill;
         skills.push(skill);

         var grade = (elt[i][1]);
         grades.push(grade)

        }

 console.log(skills);
        console.log(grades);






        var ctx = document.getElementById('myChart').getContext('2d');






            var chart = new Chart(ctx, {
                // The type of chart we want to create
                type: 'radar',

                // The data for our dataset

                data: {
                    labels: skills,
                    datasets: [{
                        label: 'note',

                        backgroundColor: "transparent",
                        borderColor: 'rgb(0,0,255)',
                        data: grades
                    }]
                },

                options : {
                    scale: {

                        ticks: {
                            beginAtZero: true,
                            min: 0,
                            max: 20,
                            stepSize: 2,
                            lineHeight: 2
                        },
                        pointLabels: {
                            fontSize: 12
                        }
                    },
                    legend: {
                        display: false
                    },
                }

            });





    </script>
    {% else %}
    <h1>vous n'avez pas acces a cette utilisateur</h1>
    {% endif %}
{% endblock %}

{% block javascripts %}

{% endblock %}